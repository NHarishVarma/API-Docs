openapi: 3.0.1
info:
  title: WebAPI
  version: "1.0"
servers:
- url: /
paths:
  /Sample:
    get:
      tags:
      - Sample
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleItem'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleItem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleItem'
    post:
      tags:
      - Sample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleItem'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleItem'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleItem'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleItem'
            application/json:
              schema:
                $ref: '#/components/schemas/SampleItem'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleItem'
  /Sample/{id}:
    get:
      tags:
      - Sample
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleItem'
            application/json:
              schema:
                $ref: '#/components/schemas/SampleItem'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleItem'
    put:
      tags:
      - Sample
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleItem'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleItem'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleItem'
      responses:
        "200":
          description: OK
    delete:
      tags:
      - Sample
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /WeatherForecast:
    get:
      tags:
      - WeatherForecast
      operationId: GetWeatherForecast
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
components:
  schemas:
    SampleItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date
        temperatureC:
          type: integer
          format: int32
        temperatureF:
          type: integer
          format: int32
          readOnly: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
